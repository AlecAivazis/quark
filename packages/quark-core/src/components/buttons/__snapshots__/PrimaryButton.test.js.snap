// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`accepts raw text as a child 1`] = `
<Button>
  <ButtonWithText
    activeColor="#2B598E"
    defaultColor="#4A90E2"
    size="medium"
    textColor="white"
  >
    <BaseButton
      activeColor="#2B598E"
      constrainSize={true}
      defaultColor="#4A90E2"
      size="medium"
    >
      <TouchableWithoutFeedback
        onPressIn={[Function]}
        onPressOut={[Function]}
      >
        <AnimatedComponent
          accessible={true}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": AnimatedInterpolation {
                "_children": Array [
                  AnimatedStyle {
                    "_children": Array [
                      AnimatedProps {
                        "_callback": [Function],
                        "_props": Object {
                          "accessible": true,
                          "children": <Text
                            style={
                              Array [
                                74,
                                Object {
                                  "color": "white",
                                },
                                undefined,
                              ]
                            }
                          >
                            hello
                          </Text>,
                          "onKeyDown": [Function],
                          "onKeyUp": [Function],
                          "onResponderGrant": [Function],
                          "onResponderMove": [Function],
                          "onResponderRelease": [Function],
                          "onResponderTerminate": [Function],
                          "onResponderTerminationRequest": [Function],
                          "onStartShouldSetResponder": [Function],
                          "style": [Circular],
                        },
                      },
                    ],
                    "_style": Object {
                      "alignItems": "center",
                      "backgroundColor": [Circular],
                      "borderRadius": 2,
                      "cursor": "pointer",
                      "height": 40,
                      "justifyContent": "center",
                      "maxWidth": 240,
                      "minWidth": 120,
                      "overflow": "hidden",
                      "touchAction": "manipulate",
                    },
                  },
                ],
                "_interpolation": [Function],
                "_listeners": Object {},
                "_parent": AnimatedValue {
                  "_animation": null,
                  "_children": Array [
                    [Circular],
                  ],
                  "_listeners": Object {},
                  "_offset": 0,
                  "_value": 0,
                },
              },
              "borderRadius": 2,
              "cursor": "pointer",
              "height": 40,
              "justifyContent": "center",
              "maxWidth": 240,
              "minWidth": 120,
              "overflow": "hidden",
              "touchAction": "manipulate",
            }
          }
        >
          <View
            accessible={true}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "rgba(74, 144, 226, 1)",
                "borderRadius": 2,
                "cursor": "pointer",
                "height": 40,
                "justifyContent": "center",
                "maxWidth": 240,
                "minWidth": 120,
                "overflow": "hidden",
                "touchAction": "manipulate",
              }
            }
          >
            <div
              className="rn-alignItems-1awozwy rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-cursor-1loqt21 rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-eu3ka rn-justifyContent-1777fci rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-maxWidth-1fnot1l rn-minHeight-ifefl9 rn-minWidth-ggk5by rn-overflowX-11yh6sk rn-overflowY-buy8e9 rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim rn-touchAction-1gvxusu rn-zIndex-1lgpqti"
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "backgroundColor": "rgba(74, 144, 226, 1)",
                }
              }
              tabIndex="0"
            >
              <Text
                style={
                  Object {
                    "color": "white",
                    "fontSize": 16,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "white",
                      "fontSize": 16,
                      "fontWeight": "300",
                      "margin": 0,
                    }
                  }
                >
                  <div
                    className="rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-1471scf rn-font-1lw9tu2 rn-fontFamily-10u92zi rn-fontSize-ubezar rn-fontWeight-1od2jal rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-textDecoration-bauka4 rn-whiteSpace-q42fyq rn-wordWrap-qvutc0"
                    dir="auto"
                    style={
                      Object {
                        "color": "white",
                      }
                    }
                  >
                    hello
                  </div>
                </Text>
              </Text>
            </div>
          </View>
        </AnimatedComponent>
      </TouchableWithoutFeedback>
    </BaseButton>
  </ButtonWithText>
</Button>
`;

exports[`renders 1`] = `
<Button>
  <ButtonWithText
    activeColor="#2B598E"
    defaultColor="#4A90E2"
    size="medium"
    textColor="white"
  >
    <BaseButton
      activeColor="#2B598E"
      constrainSize={true}
      defaultColor="#4A90E2"
      size="medium"
    >
      <TouchableWithoutFeedback
        onPressIn={[Function]}
        onPressOut={[Function]}
      >
        <AnimatedComponent
          accessible={true}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": AnimatedInterpolation {
                "_children": Array [
                  AnimatedStyle {
                    "_children": Array [
                      AnimatedProps {
                        "_callback": [Function],
                        "_props": Object {
                          "accessible": true,
                          "children": <Text
                            style={
                              Array [
                                74,
                                Object {
                                  "color": "white",
                                },
                                undefined,
                              ]
                            }
                          >
                            <Text>
                              hello
                            </Text>
                          </Text>,
                          "onKeyDown": [Function],
                          "onKeyUp": [Function],
                          "onResponderGrant": [Function],
                          "onResponderMove": [Function],
                          "onResponderRelease": [Function],
                          "onResponderTerminate": [Function],
                          "onResponderTerminationRequest": [Function],
                          "onStartShouldSetResponder": [Function],
                          "style": [Circular],
                        },
                      },
                    ],
                    "_style": Object {
                      "alignItems": "center",
                      "backgroundColor": [Circular],
                      "borderRadius": 2,
                      "cursor": "pointer",
                      "height": 40,
                      "justifyContent": "center",
                      "maxWidth": 240,
                      "minWidth": 120,
                      "overflow": "hidden",
                      "touchAction": "manipulate",
                    },
                  },
                ],
                "_interpolation": [Function],
                "_listeners": Object {},
                "_parent": AnimatedValue {
                  "_animation": null,
                  "_children": Array [
                    [Circular],
                  ],
                  "_listeners": Object {},
                  "_offset": 0,
                  "_value": 0,
                },
              },
              "borderRadius": 2,
              "cursor": "pointer",
              "height": 40,
              "justifyContent": "center",
              "maxWidth": 240,
              "minWidth": 120,
              "overflow": "hidden",
              "touchAction": "manipulate",
            }
          }
        >
          <View
            accessible={true}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "rgba(74, 144, 226, 1)",
                "borderRadius": 2,
                "cursor": "pointer",
                "height": 40,
                "justifyContent": "center",
                "maxWidth": 240,
                "minWidth": 120,
                "overflow": "hidden",
                "touchAction": "manipulate",
              }
            }
          >
            <div
              className="rn-alignItems-1awozwy rn-borderTopLeftRadius-1iymjk7 rn-borderTopRightRadius-s2skl2 rn-borderBottomRightRadius-l5bh9y rn-borderBottomLeftRadius-101sy47 rn-borderTopStyle-1efd50x rn-borderRightStyle-14skgim rn-borderBottomStyle-rull8r rn-borderLeftStyle-mm0ijv rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-cursor-1loqt21 rn-display-6koalj rn-flexShrink-1pxmb3b rn-flexBasis-7vfszb rn-flexDirection-eqz5dr rn-height-eu3ka rn-justifyContent-1777fci rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-maxWidth-1fnot1l rn-minHeight-ifefl9 rn-minWidth-ggk5by rn-overflowX-11yh6sk rn-overflowY-buy8e9 rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-position-bnwqim rn-touchAction-1gvxusu rn-zIndex-1lgpqti"
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "backgroundColor": "rgba(74, 144, 226, 1)",
                }
              }
              tabIndex="0"
            >
              <Text
                style={
                  Object {
                    "color": "white",
                    "fontSize": 16,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "white",
                      "fontSize": 16,
                      "fontWeight": "300",
                      "margin": 0,
                    }
                  }
                >
                  <div
                    className="rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-display-1471scf rn-font-1lw9tu2 rn-fontFamily-10u92zi rn-fontSize-ubezar rn-fontWeight-1od2jal rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-textDecoration-bauka4 rn-whiteSpace-q42fyq rn-wordWrap-qvutc0"
                    dir="auto"
                    style={
                      Object {
                        "color": "white",
                      }
                    }
                  >
                    <Text>
                      <span
                        className="rn-borderTopWidth-13yce4e rn-borderRightWidth-fnigne rn-borderBottomWidth-ndvcnb rn-borderLeftWidth-gxnn5r rn-boxSizing-deolkf rn-color-homxoj rn-display-1471scf rn-font-1lw9tu2 rn-fontFamily-poiln3 rn-fontSize-7cikom rn-marginTop-1mnahxq rn-marginRight-61z16t rn-marginBottom-p1pxzi rn-marginLeft-11wrixw rn-paddingTop-wk8lta rn-paddingRight-9aemit rn-paddingBottom-1mdbw0j rn-paddingLeft-gy4na3 rn-textDecoration-bauka4 rn-whiteSpace-irrty rn-wordWrap-qvutc0"
                        dir="auto"
                      >
                        hello
                      </span>
                    </Text>
                  </div>
                </Text>
              </Text>
            </div>
          </View>
        </AnimatedComponent>
      </TouchableWithoutFeedback>
    </BaseButton>
  </ButtonWithText>
</Button>
`;
