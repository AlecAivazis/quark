[{"name":"alerts","components":[{"name":"AlertContainer","filepath":"/Users/alecaivazis/dv/quark/packages/quark-web/src/components/alerts/AlertContainer","props":{"maxAlerts":{"value":"number","required":false,"nullable":false},"namespace":{"value":"string","required":false,"nullable":false}},"tags":["quark-web"],"examples":[{"filename":"example.js","title":"Default namespace","contents":"() => (\n  <React.Fragment>\n    <AlertContainer\n      style={{ position: \"fixed\", top: 10, left: 10, right: 10, zIndex: 2 }}\n    />\n    <FlexRow>\n      <PrimaryButton\n        onPress={() =>\n          triggerAlert({ type: \"success\", message: \"Success Message\" })\n        }\n        style={styles.button}\n      >\n        Success\n      </PrimaryButton>\n      <PrimaryButton\n        onPress={() =>\n          triggerAlert({ type: \"warning\", message: \"Warning Message\" })\n        }\n        style={styles.button}\n      >\n        Warning\n      </PrimaryButton>\n      <PrimaryButton\n        onPress={() => triggerAlert({ type: \"info\", message: \"Info Message\" })}\n        style={styles.button}\n      >\n        Info\n      </PrimaryButton>\n    </FlexRow>\n  </React.Fragment>\n)"}],"description":"This components designates the location for alerts that fall under a designated namespace.\n\nAlerts can have different semantic meaning and are meant to provide contextual feedback messages for typical user actions. They are triggered using the `triggerAlert` function and can have 3 types: `warning`, `info` and `success`.\n"}]},{"name":"buttons","components":[{"name":"Button","filepath":"/Users/alecaivazis/dv/quark/packages/quark-core/src/components/buttons/Button","props":{"size":{"value":"string","required":false,"nullable":false},"constrainSize":{"value":"boolean","required":false,"nullable":false},"defaultColor":{"value":"string","required":false,"nullable":false},"activeColor":{"value":"string","required":false,"nullable":false},"disabledColor":{"value":"string","required":false,"nullable":false},"hoverColor":{"value":"string","required":false,"nullable":false},"disabled":{"value":"boolean","required":false,"nullable":false},"disabledStyle":{"value":"{}","required":false,"nullable":false},"onPress":{"value":"() => void","required":false,"nullable":false},"onPressIn":{"value":"() => void","required":false,"nullable":false},"onPressOut":{"value":"() => void","required":false,"nullable":false},"style":{"value":"{ [key: string]: any }","required":false,"nullable":false},"children":{"value":"React.Node","required":true,"nullable":false},"textColor":{"value":"string","required":false,"nullable":false},"textStyle":{"value":"{}","required":false,"nullable":false}},"tags":[],"examples":[],"description":"A generic button component used for the user to click on to perform an action.\n"},{"name":"PrimaryButton","filepath":"/Users/alecaivazis/dv/quark/packages/quark-core/src/components/buttons/Primary","props":{"size":{"value":"string","required":false,"nullable":false},"constrainSize":{"value":"boolean","required":false,"nullable":false},"defaultColor":{"value":"string","required":false,"nullable":false},"activeColor":{"value":"string","required":false,"nullable":false},"disabledColor":{"value":"string","required":false,"nullable":false},"hoverColor":{"value":"string","required":false,"nullable":false},"disabled":{"value":"boolean","required":false,"nullable":false},"disabledStyle":{"value":"{}","required":false,"nullable":false},"onPress":{"value":"() => void","required":false,"nullable":false},"onPressIn":{"value":"() => void","required":false,"nullable":false},"onPressOut":{"value":"() => void","required":false,"nullable":false},"style":{"value":"{ [key: string]: any }","required":false,"nullable":false},"children":{"value":"React.Node","required":true,"nullable":false},"textColor":{"value":"string","required":false,"nullable":false},"textStyle":{"value":"{}","required":false,"nullable":false}},"tags":[],"examples":[{"filename":"disabled.js","title":"PrimaryButton - disabled","contents":"() => <PrimaryButton disabled>Hello!</PrimaryButton>"}],"description":"A component that should be used to indicate the primary action to be taken on a particular page. Used when the primary action is positive (ie, creating something in your application). There should be only one PrimaryButton per page.\n"},{"name":"SecondaryButton","filepath":"/Users/alecaivazis/dv/quark/packages/quark-core/src/components/buttons/Secondary","props":{"size":{"value":"string","required":false,"nullable":false},"constrainSize":{"value":"boolean","required":false,"nullable":false},"defaultColor":{"value":"string","required":false,"nullable":false},"activeColor":{"value":"string","required":false,"nullable":false},"disabledColor":{"value":"string","required":false,"nullable":false},"hoverColor":{"value":"string","required":false,"nullable":false},"disabled":{"value":"boolean","required":false,"nullable":false},"disabledStyle":{"value":"{}","required":false,"nullable":false},"onPress":{"value":"() => void","required":false,"nullable":false},"onPressIn":{"value":"() => void","required":false,"nullable":false},"onPressOut":{"value":"() => void","required":false,"nullable":false},"style":{"value":"{ [key: string]: any }","required":false,"nullable":false},"children":{"value":"React.Node","required":true,"nullable":false},"textColor":{"value":"string","required":false,"nullable":false},"textStyle":{"value":"{}","required":false,"nullable":false}},"tags":[],"examples":[],"description":"A component that should be used to indicate secondary action to be taken on a particular page. There can be multiple SecondaryButtons per page.\n"},{"name":"WarningButton","filepath":"/Users/alecaivazis/dv/quark/packages/quark-core/src/components/buttons/Warning","props":{"size":{"value":"string","required":false,"nullable":false},"constrainSize":{"value":"boolean","required":false,"nullable":false},"defaultColor":{"value":"string","required":false,"nullable":false},"activeColor":{"value":"string","required":false,"nullable":false},"disabledColor":{"value":"string","required":false,"nullable":false},"hoverColor":{"value":"string","required":false,"nullable":false},"disabled":{"value":"boolean","required":false,"nullable":false},"disabledStyle":{"value":"{}","required":false,"nullable":false},"onPress":{"value":"() => void","required":false,"nullable":false},"onPressIn":{"value":"() => void","required":false,"nullable":false},"onPressOut":{"value":"() => void","required":false,"nullable":false},"style":{"value":"{ [key: string]: any }","required":false,"nullable":false},"children":{"value":"React.Node","required":true,"nullable":false},"textColor":{"value":"string","required":false,"nullable":false},"textStyle":{"value":"{}","required":false,"nullable":false}},"tags":[],"examples":[],"description":"A component that should be used to indicate the primary action to be taken on a particular page. Used when the primary action is one that entails negative actions (such as removing an entity from your application). There should be only one WarningButton per view.\n"}]},{"name":"card","components":[{"name":"Card","filepath":"/Users/alecaivazis/dv/quark/packages/quark-core/src/components/card/Card","props":{},"tags":[],"examples":[],"description":"This component is used to encapsulate items with a lot of meta-data in a compact manner. Cards visually indicate a relationship between the contained data, and have a hover state.\n"},{"name":"CardAction","filepath":"/Users/alecaivazis/dv/quark/packages/quark-core/src/components/card/CardAction","props":{},"tags":[],"examples":[],"description":"This component is used to provide a call-to-action for each element in a card.\n"},{"name":"CardGrid","filepath":"/Users/alecaivazis/dv/quark/packages/quark-core/src/components/card/CardGrid","props":{"style":{"value":"number","required":true,"nullable":false},"children":{"value":"React.Node","required":true,"nullable":false},"nCols":{"value":"number","required":false,"nullable":false},"padding":{"value":"number","required":false,"nullable":false},"unused":{"value":"{}","required":false,"nullable":false}},"tags":[],"examples":[],"description":"This component organizes a grid of cards that are flushed left when there are incompelete rows.\n"}]},{"name":"form","components":[{"name":"Checkbox","filepath":"/Users/alecaivazis/dv/quark/packages/quark-core/src/components/form/Checkbox","props":{"style":{"value":"CSSStyleDeclaration","required":true,"nullable":false},"children":{"value":"boolean","required":true,"nullable":false},"content":{"value":"React.Node","required":true,"nullable":false},"onPress":{"value":"() => void","required":true,"nullable":false}},"tags":[],"examples":[],"description":"This component is used to provide a boolean state for a particular field in a form. You can optionally proide content to the checkbox, placing it in the center.\n"},{"name":"Dropdown","filepath":"/Users/alecaivazis/dv/quark/packages/quark-web/src/components/form/Dropdown","props":{"children":{"value":"(DropdownPayload) => React.Node","required":true,"nullable":false},"toggle":{"value":"React.Node","required":true,"nullable":false},"style":{"value":"{}","required":false,"nullable":false},"dropdownStyle":{"value":"{}","required":false,"nullable":false},"min":{"value":"number","required":false,"nullable":false},"max":{"value":"number","required":false,"nullable":false}},"tags":["quark-web"],"examples":[],"description":"This component provides the ability to show and hide some content by clicking on a particular element, the `toggle`. In order to facilitate keyboard interactions within the dropdown, the render callback provides a numerical index bound by the `min` and `max` props.\n"},{"name":"FilePicker","filepath":"/Users/alecaivazis/dv/quark/packages/quark-web/src/components/form/FilePicker","props":{"children":{"value":"React.Element<any>","required":true,"nullable":false},"onChange":{"value":"(Array<File>) => void | Promise<void>","required":true,"nullable":false},"onError":{"value":"(string) => void | Promise<void>","required":true,"nullable":false},"maxSize":{"value":"number","required":true,"nullable":false},"extensions":{"value":"Array<string>","required":false,"nullable":false},"style":{"value":"CSSStyleDeclaration","required":false,"nullable":false}},"tags":["quark-web"],"examples":[{"filename":"multipleFiles.js","title":"Multiple Files","contents":"() => (\n  <FilePicker onChange={console.log}>\n    <PrimaryButton>Select Files</PrimaryButton>\n  </FilePicker>\n)"}],"description":"A wrapper around the native file input that checks for extensions and file size. Returns a file object.\n"},{"name":"ImagePicker","filepath":"/Users/alecaivazis/dv/quark/packages/quark-web/src/components/form/ImagePicker","props":{"children":{"value":"React.Element<any>","required":true,"nullable":false},"onChange":{"value":"(Array<File> | string) => void | Promise<void>","required":true,"nullable":false},"onError":{"value":"(string) => void | Promise<void>","required":true,"nullable":false},"dims":{"value":"{ minWidth: number, \nmaxWidth: number, \nminHeight: number, \nmaxHeight: number }","required":true,"nullable":false},"base64":{"value":"boolean","required":false,"nullable":false},"maxSize":{"value":"number","required":false,"nullable":false},"extensions":{"value":"Array<string>","required":false,"nullable":false},"style":{"value":"CSSStyleDeclaration","required":false,"nullable":false}},"tags":["quark-web"],"examples":[{"filename":"multipleFiles.js","title":"Multiple Files","contents":"() => (\n  <ImagePicker onChange={console.log} onError={console.log}>\n    <PrimaryButton>Select Files</PrimaryButton>\n  </ImagePicker>\n)"}],"description":"A wrapper around the native file input that enforces extensions and file size, as well as specific dimensions. Returns a file object by default - or the base64 encoded string if specified otherwise.\n"},{"name":"Label","filepath":"/Users/alecaivazis/dv/quark/packages/quark-core/src/components/form/Label","props":{"textStyle":{"value":"{}","required":false,"nullable":false},"value":{"value":"string","required":true,"nullable":false},"description":{"value":"string","required":false,"nullable":false},"error":{"value":"boolean","required":false,"nullable":false}},"tags":[],"examples":[],"description":"This component is used to indicate to the user what information they should add to an input in a Form. The `description` field should provide a description for the user, as well as any sort of constraints.\n"},{"name":"Option","filepath":"/Users/alecaivazis/dv/quark/packages/quark-web/src/components/form/Option","props":{"value":{"value":"OptionValue","required":true,"nullable":false},"active":{"value":"boolean","required":true,"nullable":false},"selected":{"value":"boolean","required":true,"nullable":false},"style":{"value":"{}","required":true,"nullable":false}},"tags":["quark-web"]},{"name":"Select","filepath":"/Users/alecaivazis/dv/quark/packages/quark-web/src/components/form/Select","props":{"value":{"value":"OptionValue","required":true,"nullable":false},"placeholder":{"value":"React.Node","required":true,"nullable":false},"children":{"value":"React.Node","required":true,"nullable":false},"onChange":{"value":"(OptionValue) => void","required":false,"nullable":false},"toggleStyle":{"value":"{}","required":false,"nullable":false},"style":{"value":"{}","required":false,"nullable":false}},"tags":["quark-web"],"examples":[],"description":"This component is used in a form to allow the user to choose from a list of potential options.\n"},{"name":"TextInput","filepath":"/Users/alecaivazis/dv/quark/packages/quark-native/src/components/form/TextInput","props":{"value":{"value":"string","required":true,"nullable":false},"onChange":{"value":"(string, ?Event) => void","required":true,"nullable":false},"icon":{"value":"React.Node","required":true,"nullable":false}},"tags":[],"examples":[],"description":"This component is used in a form to collect text input from the user.\n"}]},{"name":"layout","components":[{"name":"App","filepath":"/Users/alecaivazis/dv/quark/packages/quark-native/src/components/layout/App","props":{"direction":{"value":"\"row\" | \"column\"","required":false,"nullable":false},"wrap":{"value":"\"nowrap\" | \"wrap\" | \"wrap-reverse\"","required":false,"nullable":false},"justifyContent":{"value":"\"flex-start\" | \"flex-end\" | \"center\" | \"space-between\" | \"space-around\" | \"space-evenly\"","required":false,"nullable":false},"alignItems":{"value":"\"flex-start\" | \"flex-end\" | \"center\" | \"stretch\" | \"baseline\"","required":false,"nullable":false},"order":{"value":"number","required":false,"nullable":false},"shrink":{"value":"number","required":false,"nullable":false},"alignSelf":{"value":"\"auto\" | \"flex-start\" | \"flex-end\" | \"center\" | \"baseline\" | \"stretch\"","required":false,"nullable":false}},"tags":[],"examples":[],"description":"This component should act as the root of an application. It encompasses the entire viewport and allows child components to flex appropriately.\n"},{"name":"AppBar","filepath":"/Users/alecaivazis/dv/quark/packages/quark-core/src/components/layout/AppBar","props":{},"tags":[],"examples":[],"description":"This component should sit at the top of the application and act as the main navigational header.\n"},{"name":"Flex","filepath":"/Users/alecaivazis/dv/quark/packages/quark-core/src/components/layout/Flex","props":{"direction":{"value":"\"row\" | \"column\"","required":false,"nullable":false},"wrap":{"value":"\"nowrap\" | \"wrap\" | \"wrap-reverse\"","required":false,"nullable":false},"justifyContent":{"value":"\"flex-start\" | \"flex-end\" | \"center\" | \"space-between\" | \"space-around\" | \"space-evenly\"","required":false,"nullable":false},"alignItems":{"value":"\"flex-start\" | \"flex-end\" | \"center\" | \"stretch\" | \"baseline\"","required":false,"nullable":false},"order":{"value":"number","required":false,"nullable":false},"shrink":{"value":"number","required":false,"nullable":false},"alignSelf":{"value":"\"auto\" | \"flex-start\" | \"flex-end\" | \"center\" | \"baseline\" | \"stretch\"","required":false,"nullable":false}},"tags":[],"examples":[],"description":"Flex is a container that allows for quick creation of flex-based views.\n"},{"name":"FlexColumn","filepath":"/Users/alecaivazis/dv/quark/packages/quark-core/src/components/layout/FlexColumn","props":{"direction":{"value":"\"row\" | \"column\"","required":false,"nullable":false},"wrap":{"value":"\"nowrap\" | \"wrap\" | \"wrap-reverse\"","required":false,"nullable":false},"justifyContent":{"value":"\"flex-start\" | \"flex-end\" | \"center\" | \"space-between\" | \"space-around\" | \"space-evenly\"","required":false,"nullable":false},"alignItems":{"value":"\"flex-start\" | \"flex-end\" | \"center\" | \"stretch\" | \"baseline\"","required":false,"nullable":false},"order":{"value":"number","required":false,"nullable":false},"shrink":{"value":"number","required":false,"nullable":false},"alignSelf":{"value":"\"auto\" | \"flex-start\" | \"flex-end\" | \"center\" | \"baseline\" | \"stretch\"","required":false,"nullable":false}},"tags":[],"examples":[],"description":"This column is a `Flex` view with a default `flexDirection` of `column`.\n"},{"name":"FlexRow","filepath":"/Users/alecaivazis/dv/quark/packages/quark-core/src/components/layout/FlexRow","props":{"direction":{"value":"\"row\" | \"column\"","required":false,"nullable":false},"wrap":{"value":"\"nowrap\" | \"wrap\" | \"wrap-reverse\"","required":false,"nullable":false},"justifyContent":{"value":"\"flex-start\" | \"flex-end\" | \"center\" | \"space-between\" | \"space-around\" | \"space-evenly\"","required":false,"nullable":false},"alignItems":{"value":"\"flex-start\" | \"flex-end\" | \"center\" | \"stretch\" | \"baseline\"","required":false,"nullable":false},"order":{"value":"number","required":false,"nullable":false},"shrink":{"value":"number","required":false,"nullable":false},"alignSelf":{"value":"\"auto\" | \"flex-start\" | \"flex-end\" | \"center\" | \"baseline\" | \"stretch\"","required":false,"nullable":false}},"tags":[],"examples":[],"description":"This column is a `Flex` view with a default `flexDirection` of `row`.\n"},{"name":"StatusBar","filepath":"/Users/alecaivazis/dv/quark/packages/quark-native/src/components/layout/StatusBar","props":{"style":{"value":"{ [x: string]: any }","required":true,"nullable":false}},"tags":["quark-native"],"examples":[],"description":"This component allows for easy coloring of the application status bar in a native-environment.\n"}]},{"name":"navigation","components":[{"name":"BreadcrumbChild","filepath":"/Users/alecaivazis/dv/quark/packages/quark-core/src/components/navigation/BreadcrumbChild","props":{"size":{"value":"string","required":false,"nullable":false},"constrainSize":{"value":"boolean","required":false,"nullable":false},"defaultColor":{"value":"string","required":false,"nullable":false},"activeColor":{"value":"string","required":false,"nullable":false},"disabledColor":{"value":"string","required":false,"nullable":false},"hoverColor":{"value":"string","required":false,"nullable":false},"disabled":{"value":"boolean","required":false,"nullable":false},"disabledStyle":{"value":"{}","required":false,"nullable":false},"onPress":{"value":"() => void","required":false,"nullable":false},"onPressIn":{"value":"() => void","required":false,"nullable":false},"onPressOut":{"value":"() => void","required":false,"nullable":false},"style":{"value":"{ [key: string]: any }","required":false,"nullable":false},"children":{"value":"React.Node","required":true,"nullable":false},"textColor":{"value":"string","required":false,"nullable":false},"textStyle":{"value":"{}","required":false,"nullable":false},"active":{"value":"boolean","required":false,"nullable":false}},"tags":[],"examples":[],"description":"A component meant to be nested in a `Breadcrumbs`, used to designate different sections of the navigational element.\n"},{"name":"Breadcrumbs","filepath":"/Users/alecaivazis/dv/quark/packages/quark-core/src/components/navigation/Breadcrumbs","props":{"divider":{"value":"React.Node","required":false,"nullable":false},"style":{"value":"{ [key: string]: string }","required":false,"nullable":false},"children":{"value":"React.Node","required":true,"nullable":false}},"tags":[],"examples":[],"description":"A navigational element used to provide context to the user as to where they are in the overall site map.\n"},{"name":"TabView","filepath":"/Users/alecaivazis/dv/quark/packages/quark-native/src/components/navigation/TabView","props":{"data":{"value":"Array<{ [key: string]: any }>","required":true,"nullable":false},"barStyle":{"value":"{ [key: string]: any }","required":true,"nullable":false},"tabStyle":{"value":"{ [key: string]: any }","required":true,"nullable":false},"style":{"value":"{ [key: string]: any }","required":true,"nullable":false},"children":{"value":"({ [key: string]: any }) => React.Node","required":true,"nullable":false},"numTabs":{"value":"number","required":false,"nullable":false}},"tags":["quark-native"],"examples":[],"description":"A component that allows for a view to change with a tabular navigation.\n"},{"name":"ZoomViewContainer","filepath":"/Users/alecaivazis/dv/quark/packages/quark-native/src/components/navigation/ZoomViewContainer","props":{"children":{"value":"(TransitionHandler) => undefined","required":true,"nullable":false},"style":{"value":"{}","required":true,"nullable":false},"unused":{"value":"{}","required":true,"nullable":false},"loading":{"value":"(ViewPayload) => React.Node","required":true,"nullable":false},"view":{"value":"(ViewPayload) => React.Node","required":true,"nullable":false}},"tags":["quark-native"],"examples":[],"description":"This component acts as the container that sets the bounds for a containing component to zoom in on opening, as made famous by the iOS news application.\n"}]},{"name":"overlay","components":[{"name":"Overlay","filepath":"/Users/alecaivazis/dv/quark/packages/quark-native/src/components/overlay/Overlay","props":{"visible":{"value":"boolean","required":true,"nullable":false},"toggle":{"value":"() => void","required":true,"nullable":false}},"tags":[],"examples":[],"description":"Overlays are temporary containers that span the entire viewport, covering the current content. The are best used for small interactions that happen in the current context.\n"}]},{"name":"state","components":[{"name":"BooleanState","filepath":"/Users/alecaivazis/dv/quark/packages/quark-core/src/components/state/Boolean","props":{"initial":{"value":"boolean","required":false,"nullable":false},"children":{"value":"(RenderPropCallback) => React.Node","required":true,"nullable":false}},"tags":[],"examples":[],"description":"A state component designed to allow for easy management of boolean state.\n"},{"name":"Cycle","filepath":"/Users/alecaivazis/dv/quark/packages/quark-core/src/components/state/Cycle","props":{"items":{"value":"Array<any>","required":true,"nullable":false},"children":{"value":"(CyclePayload) => void","required":true,"nullable":false},"interval":{"value":"number","required":true,"nullable":false},"active":{"value":"boolean","required":true,"nullable":false}},"tags":[],"examples":[],"description":"A state component designed to cycle between a list of values on a specific interval.\n"},{"name":"Form","filepath":"/Users/alecaivazis/dv/quark/packages/quark-core/src/components/state/Form","props":{"children":{"value":"(FormRenderProp) => React.Node","required":true,"nullable":false},"onChange":{"value":"({ [key: string]: any }) => void","required":true,"nullable":false},"validate":{"value":"{ [key: string]: (any) => ?Error }","required":true,"nullable":false},"transform":{"value":"{ [key: string]: (any) => any }","required":true,"nullable":false},"value":{"value":"{ [key: string]: any }","required":true,"nullable":false},"initialErrors":{"value":"boolean","required":true,"nullable":false},"initialData":{"value":"{ [key: string]: any }","required":true,"nullable":false}},"tags":[],"examples":[],"description":"A state component used to handle common needs for a form (i.e., data-management and validation).\n"},{"name":"FreeState","filepath":"/Users/alecaivazis/dv/quark/packages/quark-core/src/components/state/Free","props":{"children":{"value":"(RenderPropPayload) => React.Node","required":true,"nullable":false},"initial":{"value":"any","required":true,"nullable":false}},"tags":[],"examples":[],"description":"A generic state component for any kind of state.\n"},{"name":"ListState","filepath":"/Users/alecaivazis/dv/quark/packages/quark-core/src/components/state/List","props":{"initial":{"value":"Array<any>","required":true,"nullable":false},"children":{"value":"(RenderPropPayload) => React.Node","required":true,"nullable":false}},"tags":[],"examples":[],"description":"A state component specialized for managing a list of data.\n"}]},{"name":"table","components":[{"name":"Table","filepath":"/Users/alecaivazis/dv/quark/packages/quark-web/src/components/table/Table","props":{},"tags":["quark-web"],"examples":[],"description":"A component for organizing tabular data.\n"},{"name":"TableBody","filepath":"/Users/alecaivazis/dv/quark/packages/quark-web/src/components/table/TableBody","props":{},"tags":["quark-web"],"examples":[],"description":"A component used as the table body.\n"},{"name":"TableCell","filepath":"/Users/alecaivazis/dv/quark/packages/quark-web/src/components/table/TableCell","props":"ViewPropTypes","tags":["quark-web"],"examples":[],"description":"An element used for an invidual cell in the body of a table.\n"},{"name":"TableHeader","filepath":"/Users/alecaivazis/dv/quark/packages/quark-web/src/components/table/TableHeader","props":{"last":{"value":"boolean","required":false,"nullable":false}},"tags":["quark-web"],"examples":[],"description":"A component used as the row that contains the table header cells.\n"},{"name":"TableHeaderCell","filepath":"/Users/alecaivazis/dv/quark/packages/quark-web/src/components/table/TableHeaderCell","props":{},"tags":["quark-web"],"examples":[],"description":"An element used for an invidual cell in the header of a table.\n"},{"name":"TableHeaderText","filepath":"/Users/alecaivazis/dv/quark/packages/quark-web/src/components/table/TableHeaderText","props":{},"tags":["quark-web"],"examples":[],"description":"A text node used for content in a TableHeaderCell.\n"},{"name":"TableRow","filepath":"/Users/alecaivazis/dv/quark/packages/quark-web/src/components/table/TableRow","props":{"last":{"value":"boolean","required":false,"nullable":false}},"tags":["quark-web"],"examples":[],"description":"A component for each row in a table body.\n"},{"name":"TableText","filepath":"/Users/alecaivazis/dv/quark/packages/quark-web/src/components/table/TableText","props":{},"tags":["quark-web"],"examples":[],"description":"A text node used for content in a TableCell.\n"}]},{"name":"theme","components":[{"name":"GetTheme","filepath":"/Users/alecaivazis/dv/quark/packages/quark-core/src/components/theme/GetTheme","props":{"children":{"value":"(Theme) => React.Node","required":true,"nullable":false}},"tags":[],"examples":[],"description":"A component that provides the colors and styling made accessible through the `Theme` component.\n"},{"name":"Theme","filepath":"/Users/alecaivazis/dv/quark/packages/quark-core/src/components/theme/Theme","props":{"children":{"value":"React.Node","required":true,"nullable":false},"colors":{"value":"Theme","required":true,"nullable":false}},"tags":[],"examples":[],"description":"Customizes the theme made accessible to components contained by the `Theme` components.\n"}]},{"name":"timing","components":[{"name":"Interval","filepath":"/Users/alecaivazis/dv/quark/packages/quark-core/src/components/timing/Interval","props":{"children":{"value":"() => void","required":true,"nullable":false},"interval":{"value":"number","required":true,"nullable":false}},"tags":[],"examples":[],"description":"This component executes its child function on a specific interval. Similar to `window.setInterval`.\n"},{"name":"Timeout","filepath":"/Users/alecaivazis/dv/quark/packages/quark-core/src/components/timing/Timeout","props":{"delay":{"value":"number","required":true,"nullable":false},"children":{"value":"() => void","required":true,"nullable":false}},"tags":[],"examples":[],"description":"This component executes its child function after a specific time. Similar to `window.setTimeout`.\n"}]},{"name":"typography","components":[{"name":"H1","filepath":"/Users/alecaivazis/dv/quark/packages/quark-core/src/components/typography","props":"TextPropTypes","tags":[]},{"name":"H2","filepath":"/Users/alecaivazis/dv/quark/packages/quark-core/src/components/typography","props":"TextPropTypes","tags":[]},{"name":"H3","filepath":"/Users/alecaivazis/dv/quark/packages/quark-core/src/components/typography","props":"TextPropTypes","tags":[]},{"name":"Link","filepath":"/Users/alecaivazis/dv/quark/packages/quark-core/src/components/typography","props":"TextPropTypes","tags":[]},{"name":"Markdown","filepath":"/Users/alecaivazis/dv/quark/packages/quark-web/src/components/typography/Markdown","props":{"children":{"value":"string","required":true,"nullable":false},"textStyle":{"value":"CSSStyleDeclaration","required":true,"nullable":false},"renderers":{"value":"{ [key: string]: (any) => React.Node }","required":true,"nullable":false}},"tags":["quark-web"]},{"name":"Monospace","filepath":"/Users/alecaivazis/dv/quark/packages/quark-core/src/components/typography","props":"TextPropTypes","tags":[]},{"name":"Subtitle","filepath":"/Users/alecaivazis/dv/quark/packages/quark-core/src/components/typography","props":"TextPropTypes","tags":[]},{"name":"Text","filepath":"/Users/alecaivazis/dv/quark/packages/quark-core/src/components/typography","props":"TextPropTypes","tags":[]},{"name":"Title","filepath":"/Users/alecaivazis/dv/quark/packages/quark-core/src/components/typography","props":"TextPropTypes","tags":[]}]},{"name":"window","components":[{"name":"ClickAway","filepath":"/Users/alecaivazis/dv/quark/packages/quark-web/src/components/window/ClickAway","props":{"active":{"value":"boolean","required":true,"nullable":false},"onClick":{"value":"(Event) => void","required":true,"nullable":false},"children":{"value":"React.Node","required":true,"nullable":false},"event":{"value":"string","required":false,"nullable":false},"filter":{"value":"(Event) => boolean","required":false,"nullable":false}},"tags":["quark-web"],"examples":[],"description":"A container that listens for clicks outside of the children. Useful in cases where components hide themselves when the user clicks on the rest of the app (such as outside the confines of a `Select`).\n"},{"name":"EventListener","filepath":"/Users/alecaivazis/dv/quark/packages/quark-web/src/components/window/EventListener","props":{"event":{"value":"string","required":true,"nullable":false},"children":{"value":"(Event) => any","required":true,"nullable":false},"filter":{"value":"(Event) => boolean","required":false,"nullable":false}},"tags":["quark-web"],"examples":[],"description":"A component used for listening to specific window events and triggering a function.\n"},{"name":"Measure","filepath":"/Users/alecaivazis/dv/quark/packages/quark-web/src/components/window/Measure","props":{"children":{"value":"(MeasurePayload) => React.Node","required":true,"nullable":false}},"tags":["quark-web"],"examples":[],"description":"A component that provides a ref to pass to a component, and the dimensions of that component. The dimensions are kept in sync as the use scrolls the page or changes the width of the window.\n"},{"name":"Portal","filepath":"/Users/alecaivazis/dv/quark/packages/quark-web/src/components/window/Portal","props":{"id":{"value":"string","required":true,"nullable":false},"children":{"value":"React.Node","required":true,"nullable":false},"style":{"value":"{}","required":false,"nullable":false}},"tags":["quark-web"],"examples":[],"description":"A component used to render a single child component in a portal. If the element does not exist, it will be created when the component mounts at the root of the document.\n"}]}]